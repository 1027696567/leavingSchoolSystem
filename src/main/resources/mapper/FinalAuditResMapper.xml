<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.FinalAuditResMapper">
  <resultMap id="BaseResultMap" type="com.example.model.FinalAuditRes">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="stu_info_id" jdbcType="BIGINT" property="stuInfoId" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="create_time" jdbcType="DATE" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_time" jdbcType="DATE" property="updateTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
  </resultMap>
  <sql id="Base_Column_List">
    id, stu_info_id, `status`, content, create_time, create_user, update_time, update_user
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from final_audit_res
    where id = #{id,jdbcType=BIGINT}
  </select>
  <resultMap id="FinalAuditResInfo" type="com.example.model.FinalAuditResInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="stu_info_id" jdbcType="BIGINT" property="stuInfoId" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="create_time" jdbcType="DATE" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_time" jdbcType="DATE" property="updateTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="stuCardAuditResStatus" jdbcType="TINYINT" property="stuCardAuditResStatus" />
    <result column="collegeCardAuditResStatus" jdbcType="TINYINT" property="collegeCardAuditResStatus" />
    <result column="dormitoryAuditResStatus" jdbcType="TINYINT" property="dormitoryAuditResStatus" />
    <result column="educationAuditResStatus" jdbcType="TINYINT" property="educationAuditResStatus" />
    <result column="libraryCardAuditResStatus" jdbcType="TINYINT" property="libraryCardAuditResStatus" />
    <result column="memberCardAuditResStatus" jdbcType="TINYINT" property="memberCardAuditResStatus" />
    <result column="ministryFinanceAuditResStatus" jdbcType="TINYINT" property="ministryFinanceAuditResStatus" />
    <result column="partyBranchAuditResStatus" jdbcType="TINYINT" property="partyBranchAuditResStatus" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="stu_id" jdbcType="BIGINT" property="stuId" />
    <result column="finalAuditResId" jdbcType="BIGINT" property="finalAuditResId" />
  </resultMap>
  <select id="selectByCondition" resultMap="FinalAuditResInfo">
    select a.username,
    b.`name`, b.stu_id, b.id,
    c.`status` as collegeCardAuditResStatus,
    d.`status` as stuCardAuditResStatus,
    e.`status` as dormitoryAuditResStatus,
    f.`status` as educationAuditResStatus,
    g.`status` as libraryCardAuditResStatus,
    h.`status` as memberCardAuditResStatus,
    i.`status` as ministryFinanceAuditResStatus,
    j.`status` as partyBranchAuditResStatus ,
    k.id as finalAuditResId, k.stu_info_id, k.status, k.content, k.create_time, k.create_user, k.update_time, k.update_user
    from (select * from sys_user
    <if test="_parameter != null">WHERE username = #{username,jdbcType=VARCHAR}</if>
    )as a
    INNER JOIN stu_info as b on a.id = b.user_id
    LEFT JOIN college_card_audit_res as c on b.id = c.stu_info_id
    LEFT JOIN dept_audit_res as d on b.id = d.stu_info_id
    LEFT JOIN dormitory_audit_res as e on b.id = e.stu_info_id
    LEFT JOIN education_audit_res as f on b.id = f.stu_info_id
    LEFT JOIN library_card_audit_res as g on b.id = g.stu_info_id
    LEFT JOIN member_card_audit_res as h on b.id = h.stu_info_id
    LEFT JOIN ministry_finance_audit_res as i on b.id = i.stu_info_id
    LEFT JOIN party_branch_audit_res as j on b.id = j.stu_info_id
    LEFT JOIN final_audit_res as k on b.id = k.stu_info_id
    WHERE b.active = 1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from final_audit_res
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.model.FinalAuditRes" useGeneratedKeys="true">
    insert into final_audit_res (stu_info_id, `status`, content, 
      create_time, create_user, update_time, 
      update_user)
    values (#{stuInfoId,jdbcType=BIGINT}, #{status,jdbcType=TINYINT}, #{content,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=DATE}, #{createUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=DATE}, 
      #{updateUser,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.model.FinalAuditRes" useGeneratedKeys="true">
    insert into final_audit_res
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stuInfoId != null">
        stu_info_id,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stuInfoId != null">
        #{stuInfoId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=DATE},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.model.FinalAuditRes">
    update final_audit_res
    <set>
      <if test="stuInfoId != null">
        stu_info_id = #{stuInfoId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=DATE},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.model.FinalAuditRes">
    update final_audit_res
    set stu_info_id = #{stuInfoId,jdbcType=BIGINT},
      `status` = #{status,jdbcType=TINYINT},
      content = #{content,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=DATE},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=DATE},
      update_user = #{updateUser,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>